version: 2.1

orbs:
  shellcheck: circleci/shellcheck@3.2.0
  sonarcloud: sonarsource/sonarcloud@2.0.0

parameters:
  cache-version:
    type: string
    default: v0

context-and-filters: &context-and-filters
  context:
    - SonarCloud
  filters:
    tags: ## all tags
      only: [ /^.*$/ ]

commands:
  restore-npm-cache:
    steps:
      - restore_cache:
          keys:
            - << pipeline.parameters.cache-version >>-package-cache-{{ checksum "package.json" }}
            - << pipeline.parameters.cache-version >>-package-cache-
  save-npm-cache:
    steps:
      - save_cache:
          key: << pipeline.parameters.cache-version >>-package-cache-{{ checksum "package.json" }}
          paths: [ /home/circleci/cache/node_modules_cache ]

jobs:
  package-and-test:
    docker:
      - image: cimg/node:20.8
    environment:
      npm_config_cache: /home/circleci/cache/node_modules_cache
    steps:
      ##### PACKAGE #####
      - checkout
      - restore-npm-cache
      - run: npm install
      - save-npm-cache
      - when:
          condition:
              not: << pipeline.git.tag >>
          steps:
            - run:
                name: npm version
                command: |
                  VER=$(jq -r '.version' < package.json)
                  NEW_VER=${VER%.*}.$CIRCLE_BUILD_NUM
                  npm version $NEW_VER --no-commit-hooks --no-git-tag-version
      - run: npx vsce package
      - run:
          command: |
            npm run lint -- -f json -o artifacts/eslint_results.json || true
            jq '.' artifacts/eslint_results.json > artifacts/eslint_results_pretty.json
      - run: cp *.vsix artifacts/
      - run: rm artifacts/*.vsix
      # - persist_to_workspace: { root: '.', paths: [ '.' ] }
      ##### TEST #####
      - run: sudo cp .circleci/sources.list /etc/apt/sources.list
      - run: sudo apt update
      - run: sudo apt install libnss3 libatk1.0-0 libatk-bridge2.0-0 gtk2-engines-pixbuf libgbm-dev libgtk-3-0 libasound2 xvfb
      - run: sudo apt upgrade git
      - run: git config --global user.email "circleci@kenherring.com"
      - run: git config --global user.name "kenherring/multi-branch-checkout CircleCI execution"
      - run: xvfb-run -a npm test
      # - persist_to_workspace: { root: '.', paths: [ artifacts, coverage ]}
      - persist_to_workspace: { root: '.', paths: [ '.' ] }
      - store_test_results: { path: artifacts/mocha_results_xunit.xml }
      ##### SONAR #####
      - sonarcloud/scan:
          cache_version: 9
      - store_artifacts: { path: artifacts }
      - store_artifacts: { path: coverage }
  publish:
    docker:
      - image: cimg/node:20.8
    steps:
      - attach_workspace: { at: '.' }
      - when:
          condition:
            not: << pipeline.git.tag >>
          steps:
            - run: npx vsce publish --pre-release
      - when:
          condition: << pipeline.git.tag >>
          steps:
            - run: npx vsce publish

workflows:
  build:
    jobs:
      - shellcheck/check
      - package-and-test:
          <<: *context-and-filters
      - publish:
          context:
            - Azure_PAT
            - GitHub_CLI
          filters: ## ignore branches except main (pre-release); build only tags
            branches: { only: main }
            tags: { only: /^.*$/ }
          requires:
            - shellcheck/check
            - package-and-test
