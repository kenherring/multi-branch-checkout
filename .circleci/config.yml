version: 2.1

orbs:
  shellcheck: circleci/shellcheck@3.2.0
  sonarcloud: sonarsource/sonarcloud@2.0.0

parameters:
  cache-version:
    type: string
    default: v0

context-and-filters: &context-and-filters
  context:
    - SonarCloud
  filters:
    tags: ## all tags
      only: [ /^.*$/ ]

commands:
  restore-npm-cache:
    steps:
      - restore_cache:
          keys:
            - << pipeline.parameters.cache-version >>-package-cache-{{ checksum "package.json" }}
            - << pipeline.parameters.cache-version >>-package-cache-
  save-npm-cache:
    steps:
      - save_cache:
          key: << pipeline.parameters.cache-version >>-package-cache-{{ checksum "package.json" }}
          paths: [ /home/circleci/cache/node_modules_cache ]

jobs:
  package:
    docker:
      - image: cimg/node:20.8
    environment:
      npm_config_cache: /home/circleci/cache/node_modules_cache
    steps:
      - checkout
      - restore-npm-cache
      - run: npm install
      - save-npm-cache
      - run: npm version 0.0.$CIRCLE_BUILD_NUM --no-commit-hooks --no-git-tag-version
      - run: npx vsce package
      - run:
          command: |
            npm run lint -- -f json -o artifacts/eslint_results.json || true
            jq '.' artifacts/eslint_results.json > artifacts/eslint_results_pretty.json
      - run: cp *.vsix artifacts/
      - store_artifacts:
          path: artifacts
      - run: rm artifacts/*.vsix
      - persist_to_workspace: { root: '.', paths: [ '.' ] }
  test:
    docker:
      - image: cimg/node:20.8
    steps:
      - attach_workspace: { at: '.' }
      # - run: cp /etc/apt/sources.list artifacts/sources.list
      - run: sudo cp .circleci/sources.list /etc/apt/sources.list
      - run: sudo apt update
      - run: sudo apt install libnss3 libatk1.0-0 libatk-bridge2.0-0 gtk2-engines-pixbuf libgbm-dev libgtk-3-0 libasound2 xvfb
      # - run: sudo apt install libnss3
      # - run: sudo apt install libatk1.0-0
      # - run: sudo apt install libatk-bridge2.0-0
      # - run: sudo apt install gtk2-engines-pixbuf
      # - run: sudo apt install libgbm-dev
      # - run: sudo apt install libgtk-3-0
      # - run: sudo apt install libasound2
      # - run: sudo apt install xvfb
      - run: sudo apt upgrade git
      - run: git --version
      - run: xvfb-run -a npm run test
      - persist_to_workspace: { root: '.', paths: [ artifacts, coverage ]}
      - store_test_results: { path: artifacts/mocha_results_xunit.xml }
      - run:
          name: sudo apt clean
          command: sudo apt clean
          when: always
      - store_artifacts: { path: artifacts }
  sonar:
    docker:
      - image: cimg/node:20.8
    steps:
      - attach_workspace: { at: '.' }
      - sonarcloud/scan:
          cache_version: 9
      - store_artifacts: { path: artifacts }
      - store_artifacts: { path: coverage }
      - run:
          when: on_fail
          command: env
  publish:
    docker:
      - image: cimg/node:20.8
    steps:
      - attach_workspace: { at: '.' }
      - when:
          condition:
            not: << pipeline.git.tag >>
          steps:
            - run: npx vsce publish --prerelease
      - when:
          condition: << pipeline.git.tag >>
          steps:
            - run: npx vsce publish

workflows:
  build:
    jobs:
      - shellcheck/check
      - package:
          <<: *context-and-filters
      - test:
          <<: *context-and-filters
          requires: [ package ]
      - sonar:
          <<: *context-and-filters
          requires: [ test ]
      - publish:
          context:
            - Azure_PAT
            - GitHub_CLI
          filters: ## ignore branches except main (pre-release); build only tags
            branches: { only: main }
            tags: { only: /^.*$/ }
          requires:
            - shellcheck/check
            - sonar
