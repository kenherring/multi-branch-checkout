{
	"name": "multi-branch-checkout",
	"displayName": "Multi Branch Checkout",
	"description": "Checkout and commit different working sets to multiple branches in parallel from a single repository",
	"version": "0.1.0",
	"preview": true,
	"publisher": "kherring",
	"private": true,
	"license": "MIT",
	"author": {
		"name": "Ken Herring",
		"url": "https://kenherring.com"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/kenherring/multi-branch-checkout"
	},
	"homepage": "https://github.com/kenherring/multi-branch-checkout",
	"bugs": {
		"url": "https://github.com/kenherring/multi-branch-checkout/issues"
	},
	"keywords": [
		"git",
		"branch",
		"worktree",
		"checkout",
		"commit",
		"multi",
		"stash",
		"multi-branch-checkout",
		"multi branch"
	],
	"badges": [],
	"galleryBanner": {
		"color": "#007ACC",
		"theme": "dark"
	},
	"icon": "resources/icon.jpg",
	"engines": {
		"vscode": "^1.94.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"workspaceContains:filePattern:.git/HEAD"
	],
	"main": "./dist/extension.js",
	"extensionDependencies": [
		"vscode.git"
	],
	"contributes": {
		"views": {
			"scm": [
				{
					"id": "multi-branch-checkout.worktreeView",
					"name": "Worktrees"
				}
			]
		},
		"commands": [
			{
				"command": "multi-branch-checkout.refresh",
				"title": "Multi Branch Checkout: Refresh",
				"icon": "$(refresh)"
			},
			{
				"command": "multi-branch-checkout.createWorktree",
				"title": "Multi Branch Checkout: Create Branch / Worktree",
				"icon": "$(git-branch-create)"
			},
			{
				"command": "multi-branch-checkout.deleteWorktree",
				"title": "Multi Branch Checkout: Delete Branch / Worktree",
				"icon": "$(trash)"
			},
			{
				"command": "multi-branch-checkout.launchWindowForWorktree",
				"title": "Multi Branch Checkout: Open worktree in new window",
				"icon": "$(multiple-windows)"
			},
			{
				"command": "multi-branch-checkout.lockWorktree",
				"title": "Multi Branch Checkout: Lock worktree",
				"shortTitle": "Worktree unlocked",
				"icon": "$(lock)",
				"enablement": "viewItem == WorktreeRootUnlocked"
			},
			{
				"command": "multi-branch-checkout.unlockWorktree",
				"title": "Multi Branch Checkout: Unlock worktree",
				"shortTitle": "Workree locked",
				"icon": "$(unlock)",
				"enablement": "viewItem == WorktreeRootLocked"
			},
			{
				"command": "multi-branch-checkout.swap",
				"title": "Multi Branch Checkout: Swap worktree",
				"shortTitle": "Swap worktree",
				"icon": "${arrow-swap}"
			},
			{
				"command": "multi-branch-checkout.stageNode",
				"title": "Multi Branch Checkout: Stage changes",
				"icon": "$(plus)"
			},
			{
				"command": "multi-branch-checkout.unstageNode",
				"title": "Multi Branch Checkout: Unstage changes",
				"icon": "$(remove)"
			},
			{
				"command": "multi-branch-checkout.discardChanges",
				"title": "Multi Branch Checkout: Discard changes",
				"shortTitle": "Discard changes",
				"icon": "$(discard)"
			},
			{
				"command": "multi-branch-checkout.compareFileWithMergeBase",
				"title": "Multi Branch Checkout: Compare to worktree merge-base",
				"icon": "$(git-compare)"
			},
			{
				"command": "multi-branch-checkout.compareFileWithPrimary",
				"title": "Multi Branch Checkout: Compare to primary worktree",
				"icon": "$(git-compare)"
			},
			{
				"command": "multi-branch-checkout.openFile",
				"title": "Multie Branch Checkout: Open file",
				"icon": "$(go-to-file)"
			},
			{
				"command": "multi-branch-checkout.patchToWorktree",
				"title": "Multi Branch Checkout: Patch to worktree",
				"shortTitle": "Patch to worktree",
				"icon": "$(insert)"
			},
			{
				"command": "multi-branch-checkout.copyToWorktree",
				"title": "Multi Branch Checkout: Copy to worktree",
				"category": "external",
				"icon": "$(copy)"
			},
			{
				"command": "multi-branch-checkout.moveToWorktree",
				"title": "Multi Branch Checkout: Move to worktree",
				"category": "external",
				"icon": "$(redo)"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "multi-branch-checkout.refresh",
					"when": "view == multi-branch-checkout.worktreeView",
					"group": "navigation"
				},
				{
					"command": "multi-branch-checkout.createWorktree",
					"when": "view == multi-branch-checkout.worktreeView",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "multi-branch-checkout.swap",
					"when": "view == multi-branch-checkout.worktreeView && viewItem =~ /^WorktreeRoot/",
					"group": "inline"
				},
				{
					"command": "multi-branch-checkout.launchWindowForWorktree",
					"when": "view == multi-branch-checkout.worktreeView && viewItem =~ /^WorktreeRoot/",
					"group": "inline"
				},
				{
					"command": "multi-branch-checkout.deleteWorktree",
					"when": "view == multi-branch-checkout.worktreeView && viewItem =~ /^WorktreeRoot/",
					"group": "inline"
				},
				{
					"command": "multi-branch-checkout.lockWorktree",
					"when": "view == multi-branch-checkout.worktreeView && viewItem == WorktreeRootUnlocked",
					"group": "inline@1"
				},
				{
					"command": "multi-branch-checkout.unlockWorktree",
					"when": "view == multi-branch-checkout.worktreeView && viewItem == WorktreeRootLocked",
					"group": "inline@1"
				},
				{
					"command": "multi-branch-checkout.stageNode",
					"when": "view == multi-branch-checkout.worktreeView && (viewItem == WorktreeFileChanges || viewItem == WorktreeFileUntracked || viewItem == WorktreeFileGroupChanges || viewItem == WorktreeFilesGroupUntracked)",
					"group": "inline"
				},
				{
					"command": "multi-branch-checkout.unstageNode",
					"when": "view == multi-branch-checkout.worktreeView && (viewItem == WorktreeFileStaged || viewItem == WorktreeFileGroupStaged)",
					"group": "inline"
				},
				{
					"command": "multi-branch-checkout.discardChanges",
					"when": "view == multi-branch-checkout.worktreeView && (viewItem == WorktreeFileUntracked || viewItem == WorktreeFileChanges)",
					"group": "inline"
				},
				{
					"command": "multi-branch-checkout.openFile",
					"when": "view == multi-branch-checkout.worktreeView && (viewItem == WorktreeFileChanges || viewItem =~ /^WorktreeFile/)",
					"group": "inline"
				},
				{
					"command": "multi-branch-checkout.compareFileWithMergeBase",
					"when": "view == multi-branch-checkout.worktreeView && (viewItem == WorktreeFileChanges || viewItem == WorktreeFileUntracked || viewItem == WorktreeFileStaged || viewItem == WorktreeFileCommitted)",
					"group": "inline"
				},
				{
					"command": "multi-branch-checkout.copyToWorktree",
					"when": "false",
					"group": "inline@8"
				},
				{
					"command": "multi-branch-checkout.patchToWorktree",
					"when": "view == multi-branch-checkout.worktreeView && (viewItem == WorktreeFileChanges || viewItem == WorktreeFileUntracked || viewItem == WorktreeFileStaged || viewItem == WorktreeFileCommitted)",
					"group": "inline@8"
				},
				{
					"command": "multi-branch-checkout.moveToWorktree",
					"when": "view == multi-branch-checkout.worktreeView && (viewItem == WorktreeFileChanges || viewItem == WorktreeFileUntracked)",
					"group": "inline@8"
				}
			]
		},
		"configuration": []
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"clean": "bash -c scripts/clean.sh",
		"build": "node esbuild.js",
		"compile": "node esbuild.js",
		"watch": "npm run build -- --watch",
		"test": "vscode-test --coverage",
		"lint": "eslint \"src/**/*.ts\"",
		"build-tsc": "tsc -p ./",
		"compile-tsc": "tsc -p ./",
		"watch-tsc": "tsc -watch -p ./"
	},
	"devDependencies": {
		"@stylistic/eslint-plugin": "^2.10.1",
		"@swc-node/register": "^1.10.9",
		"@types/mocha": "^10.0.9",
		"@types/node": "^20",
		"@types/npmcli__promise-spawn": "^6.0.3",
		"@types/vscode": "^1.94.0",
		"@typescript-eslint/eslint-plugin": "^7.18.0",
		"@typescript-eslint/parser": "^7.18.0",
		"@vscode/test-cli": "^0.0.10",
		"@vscode/test-electron": "^2.4.1",
		"@vscode/vsce": "^3.2.1",
		"esbuild": "0.24.0",
		"eslint": "^8.57.1",
		"mocha": "^10.8.2",
		"mocha-multi-reporters": "^1.5.1",
		"mocha-reporter-sonarqube": "^2.1.1",
		"ts-node": "^10.9.2",
		"tsconfig-paths": "^4.2.0",
		"typescript": "^5.6.3"
	},
	"dependencies": {
		"@npmcli/git": "^6.0.1"
	}
}
